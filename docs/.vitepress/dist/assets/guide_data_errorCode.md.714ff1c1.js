import{_ as t,o as d,c as e,O as a}from"./chunks/framework.d524946d.js";const p=JSON.parse('{"title":"错误码","description":"","frontmatter":{},"headers":[],"relativePath":"guide/data/errorCode.md","filePath":"guide/data/errorCode.md"}'),r={name:"guide/data/errorCode.md"},o=a('<h1 id="错误码" tabindex="-1">错误码 <a class="header-anchor" href="#错误码" aria-label="Permalink to &quot;错误码&quot;">​</a></h1><h2 id="定义规范" tabindex="-1">定义规范 <a class="header-anchor" href="#定义规范" aria-label="Permalink to &quot;定义规范&quot;">​</a></h2><p>我们理想提供通俗易通的错误码管理，在<code>http error code</code> 补充一位并丰富内容。</p><table><thead><tr><th>前缀</th><th>含义</th><th>示例</th></tr></thead><tbody><tr><td>^1</td><td>提示信息</td><td>1000</td></tr><tr><td>^2</td><td>成功信息</td><td>2000</td></tr><tr><td>^3</td><td>警告信息</td><td>3002</td></tr><tr><td>^4</td><td>错误信息</td><td>4004</td></tr></tbody></table><h2 id="错误码列表" tabindex="-1">错误码列表 <a class="header-anchor" href="#错误码列表" aria-label="Permalink to &quot;错误码列表&quot;">​</a></h2><table><thead><tr><th>code</th><th>描述</th></tr></thead><tbody><tr><td>1001</td><td>录制操作被取消</td></tr><tr><td>2000</td><td>通用success</td></tr><tr><td>4025</td><td>代码编译错误</td></tr></tbody></table>',6),h=[o];function c(s,i,n,_,l,u){return d(),e("div",null,h)}const m=t(r,[["render",c]]);export{p as __pageData,m as default};
