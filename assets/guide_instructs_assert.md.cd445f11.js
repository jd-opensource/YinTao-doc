import{_ as s,o as a,c as l,Q as o}from"./chunks/framework.7f46d7d2.js";const h=JSON.parse('{"title":"assert","description":"","frontmatter":{},"headers":[],"relativePath":"guide/instructs/assert.md","filePath":"guide/instructs/assert.md","lastUpdated":1713769091000}'),e={name:"guide/instructs/assert.md"},n=o(`<h1 id="assert" tabindex="-1">assert <a class="header-anchor" href="#assert" aria-label="Permalink to &quot;assert&quot;">​</a></h1><h2 id="assert-all-string-times" tabindex="-1">assert.all(string,times) <a class="header-anchor" href="#assert-all-string-times" aria-label="Permalink to &quot;assert.all(string,times)&quot;">​</a></h2><p>全局断言,判断当前页面内是否存在指定字符串。 默认判断规则为，判定默认6次每次间隔500ms,如果在规定时间能为找到则断言失败</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> assert.</span><span style="color:#B392F0;">all</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;立即下单&#39;</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// 判断页面内是否存在立即下单文字</span></span>
<span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> assert.</span><span style="color:#B392F0;">all</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;立即下单&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// 增加重试次数</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> assert.</span><span style="color:#6F42C1;">all</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;立即下单&#39;</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// 判断页面内是否存在立即下单文字</span></span>
<span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> assert.</span><span style="color:#6F42C1;">all</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;立即下单&#39;</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// 增加重试次数</span></span></code></pre></div><h2 id="assert-true-value-bool-string-number-errhint" tabindex="-1">assert.true(value: bool | string | number ,errHint) <a class="header-anchor" href="#assert-true-value-bool-string-number-errhint" aria-label="Permalink to &quot;assert.true(value: bool | string | number ,errHint)&quot;">​</a></h2><p>判断value内容是否为true.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> assert.</span><span style="color:#B392F0;">true</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;存在&#39;</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// </span></span>
<span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> assert.</span><span style="color:#B392F0;">all</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;断言内容为false,请检查相关代码逻辑&quot;</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// 当断言失败时会显示，提示文字</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> assert.</span><span style="color:#6F42C1;">true</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;存在&#39;</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// </span></span>
<span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> assert.</span><span style="color:#6F42C1;">all</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">false</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;断言内容为false,请检查相关代码逻辑&quot;</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// 当断言失败时会显示，提示文字</span></span></code></pre></div><h2 id="assert-custom-sign-attr-prevalue-operate" tabindex="-1">assert.custom(sign,attr,preValue,operate) <a class="header-anchor" href="#assert-custom-sign-attr-prevalue-operate" aria-label="Permalink to &quot;assert.custom(sign,attr,preValue,operate)&quot;">​</a></h2><p>断言，获取元素的预期值与实际值进行比较。</p><p><code>sign</code>:元素标记，支持传递元素的<code>css选择器</code>、<code>xpath</code>、<code>id</code>；</p><p><code>attr</code>:断言的元素的属性值；</p><p><code>preValue</code>: 断言元素属性的预期值；</p><p><code>opreate</code>: 比较方式：<code>0-相等</code>，<code>1-不相等</code>，<code>2-包含</code>，<code>3-不包含</code>；</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> assert.</span><span style="color:#B392F0;">custom</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;#su&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&#39;value&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&#39;百度一下&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//判断su的value是否等于百度一下</span></span>
<span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> assert.</span><span style="color:#B392F0;">custom</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;.title&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&#39;innerText&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&#39;hello&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// 获取class=tiile的文本内容进行断言</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> assert.</span><span style="color:#6F42C1;">custom</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;#su&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;value&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;百度一下&#39;</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//判断su的value是否等于百度一下</span></span>
<span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> assert.</span><span style="color:#6F42C1;">custom</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;.title&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;innerText&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;hello&#39;</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// 获取class=tiile的文本内容进行断言</span></span></code></pre></div><h2 id="assert-title-string" tabindex="-1">assert.title(string) <a class="header-anchor" href="#assert-title-string" aria-label="Permalink to &quot;assert.title(string)&quot;">​</a></h2><p>断言，指定dom的<code>title</code>与入参进行比较。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> assert.</span><span style="color:#B392F0;">title</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;百度一下，你就知道&#39;</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//判断当前页面的title值是不是‘百度一下，你就知道’</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> assert.</span><span style="color:#6F42C1;">title</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;百度一下，你就知道&#39;</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//判断当前页面的title值是不是‘百度一下，你就知道’</span></span></code></pre></div><h2 id="assert-location-url" tabindex="-1">assert.location(url) <a class="header-anchor" href="#assert-location-url" aria-label="Permalink to &quot;assert.location(url)&quot;">​</a></h2><p>断言，指定dom的<code>url</code>与文本进行比较。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> assert.</span><span style="color:#B392F0;">location</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;https://www.baidu.com/&#39;</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//判断当前页面的url值与传参是否一致</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> assert.</span><span style="color:#6F42C1;">location</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;https://www.baidu.com/&#39;</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//判断当前页面的url值与传参是否一致</span></span></code></pre></div>`,20),p=[n];function t(r,c,i,y,E,d){return a(),l("div",null,p)}const F=s(e,[["render",t]]);export{h as __pageData,F as default};
