import{_ as a,o as n,c as o,O as l}from"./chunks/framework.58a9e095.js";const E=JSON.parse('{"title":"mouse","description":"","frontmatter":{},"headers":[],"relativePath":"guide/instructs/mouse.md","filePath":"guide/instructs/mouse.md","lastUpdated":1730861693000}'),p={name:"guide/instructs/mouse.md"};function e(t,s,c,r,i,y){return n(),o("div",null,s[0]||(s[0]=[l(`<h1 id="mouse" tabindex="-1">mouse <a class="header-anchor" href="#mouse" aria-label="Permalink to &quot;mouse&quot;">​</a></h1><p>使用鼠标对页面进行操作</p><h2 id="mouse-down-options-button-string-clickcount-number" tabindex="-1">mouse.down(options:{button?: string;clickCount?: number;}) <a class="header-anchor" href="#mouse-down-options-button-string-clickcount-number" aria-label="Permalink to &quot;mouse.down(options:{button?: string;clickCount?: number;})&quot;">​</a></h2><p>用于模拟鼠标按下事件，默认值：button = &#39;left&#39;, clickCount = 1。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> mouse.</span><span style="color:#B392F0;">down</span><span style="color:#E1E4E8;">()  </span><span style="color:#6A737D;">// 模拟鼠标按下</span></span>
<span class="line"><span style="color:#6A737D;">// 鼠标移动到x,y位置点击右键,需web页面支持鼠标右键操作</span></span>
<span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> mouse.</span><span style="color:#B392F0;">move</span><span style="color:#E1E4E8;">(x,y)</span></span>
<span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> mouse.</span><span style="color:#B392F0;">down</span><span style="color:#E1E4E8;">({button:</span><span style="color:#9ECBFF;">&quot;right&quot;</span><span style="color:#E1E4E8;">})</span></span>
<span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> mouse.</span><span style="color:#B392F0;">up</span><span style="color:#E1E4E8;">({button:</span><span style="color:#9ECBFF;">&quot;right&quot;</span><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> mouse.</span><span style="color:#6F42C1;">down</span><span style="color:#24292E;">()  </span><span style="color:#6A737D;">// 模拟鼠标按下</span></span>
<span class="line"><span style="color:#6A737D;">// 鼠标移动到x,y位置点击右键,需web页面支持鼠标右键操作</span></span>
<span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> mouse.</span><span style="color:#6F42C1;">move</span><span style="color:#24292E;">(x,y)</span></span>
<span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> mouse.</span><span style="color:#6F42C1;">down</span><span style="color:#24292E;">({button:</span><span style="color:#032F62;">&quot;right&quot;</span><span style="color:#24292E;">})</span></span>
<span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> mouse.</span><span style="color:#6F42C1;">up</span><span style="color:#24292E;">({button:</span><span style="color:#032F62;">&quot;right&quot;</span><span style="color:#24292E;">})</span></span></code></pre></div><h2 id="mouse-dragto-point-x-number-y-number-targetpoint-x-number-y-number" tabindex="-1">mouse.dragTo(point: {x:number,y:number}, targetPoint: {x:number,y:number}) <a class="header-anchor" href="#mouse-dragto-point-x-number-y-number-targetpoint-x-number-y-number" aria-label="Permalink to &quot;mouse.dragTo(point: {x:number,y:number}, targetPoint: {x:number,y:number})&quot;">​</a></h2><p>使用鼠标进行拖拽，基于x，y坐标进行，将从point位置拖拽至targetPoint。 也可用于模拟滑动屏幕。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> mouse.</span><span style="color:#B392F0;">dragTo</span><span style="color:#E1E4E8;">({x:</span><span style="color:#79B8FF;">378</span><span style="color:#E1E4E8;">,y:</span><span style="color:#79B8FF;">447</span><span style="color:#E1E4E8;">},{x:</span><span style="color:#79B8FF;">192</span><span style="color:#E1E4E8;">,y:</span><span style="color:#79B8FF;">447</span><span style="color:#E1E4E8;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// todo在无法得知坐标的情况下，可以通过在控制台输入:</span></span>
<span class="line"><span style="color:#E1E4E8;">document.</span><span style="color:#B392F0;">onmousemove</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">e</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;">{console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;x:&quot;</span><span style="color:#E1E4E8;">,e.x,</span><span style="color:#9ECBFF;">&quot;y:&quot;</span><span style="color:#E1E4E8;">,e.y)}</span></span>
<span class="line"><span style="color:#6A737D;">// 即可实时打印坐标位置</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> mouse.</span><span style="color:#6F42C1;">dragTo</span><span style="color:#24292E;">({x:</span><span style="color:#005CC5;">378</span><span style="color:#24292E;">,y:</span><span style="color:#005CC5;">447</span><span style="color:#24292E;">},{x:</span><span style="color:#005CC5;">192</span><span style="color:#24292E;">,y:</span><span style="color:#005CC5;">447</span><span style="color:#24292E;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// todo在无法得知坐标的情况下，可以通过在控制台输入:</span></span>
<span class="line"><span style="color:#24292E;">document.</span><span style="color:#6F42C1;">onmousemove</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">e</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;">{console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;x:&quot;</span><span style="color:#24292E;">,e.x,</span><span style="color:#032F62;">&quot;y:&quot;</span><span style="color:#24292E;">,e.y)}</span></span>
<span class="line"><span style="color:#6A737D;">// 即可实时打印坐标位置</span></span></code></pre></div><h2 id="mouse-up-options-button-string-clickcount-number" tabindex="-1">mouse.up(options:{button?: string;clickCount?: number;}) <a class="header-anchor" href="#mouse-up-options-button-string-clickcount-number" aria-label="Permalink to &quot;mouse.up(options:{button?: string;clickCount?: number;})&quot;">​</a></h2><p>用于模拟鼠标抬起事件， 默认值：button = &#39;left&#39;, clickCount = 1。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> mouse.</span><span style="color:#B392F0;">up</span><span style="color:#E1E4E8;">()  </span><span style="color:#6A737D;">// 模拟鼠标抬起</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> mouse.</span><span style="color:#6F42C1;">up</span><span style="color:#24292E;">()  </span><span style="color:#6A737D;">// 模拟鼠标抬起</span></span></code></pre></div><h2 id="mouse-click-x-number-y-number-options-delay-number" tabindex="-1">mouse.click(x:number,y:number,options:{delay?: number;}) <a class="header-anchor" href="#mouse-click-x-number-y-number-options-delay-number" aria-label="Permalink to &quot;mouse.click(x:number,y:number,options:{delay?: number;})&quot;">​</a></h2><p>用于模拟鼠标点击事件，</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> mouse.</span><span style="color:#B392F0;">click</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">)  </span><span style="color:#6A737D;">// 模拟点击100,100位置</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> mouse.</span><span style="color:#6F42C1;">click</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">)  </span><span style="color:#6A737D;">// 模拟点击100,100位置</span></span></code></pre></div><h2 id="mouse-move-options-button-string-clickcount-number" tabindex="-1">mouse.move(options:{button?: string;clickCount?: number;}) <a class="header-anchor" href="#mouse-move-options-button-string-clickcount-number" aria-label="Permalink to &quot;mouse.move(options:{button?: string;clickCount?: number;})&quot;">​</a></h2><p>用于模拟鼠标移动事件。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> mouse.</span><span style="color:#B392F0;">move</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">)  </span><span style="color:#6A737D;">// 模拟鼠标移动至像素100,100位置</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> mouse.</span><span style="color:#6F42C1;">move</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">)  </span><span style="color:#6A737D;">// 模拟鼠标移动至像素100,100位置</span></span></code></pre></div><h2 id="mouse-wheel-x-y" tabindex="-1">mouse.wheel(x, y) <a class="header-anchor" href="#mouse-wheel-x-y" aria-label="Permalink to &quot;mouse.wheel(x, y)&quot;">​</a></h2><p>用于模拟鼠标滚轮事件。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> mouse.</span><span style="color:#B392F0;">wheel</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">300</span><span style="color:#E1E4E8;">)  </span><span style="color:#6A737D;">// 滚轮向下滚动300</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> mouse.</span><span style="color:#6F42C1;">wheel</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">300</span><span style="color:#24292E;">)  </span><span style="color:#6A737D;">// 滚轮向下滚动300</span></span></code></pre></div>`,20)]))}const d=a(p,[["render",e]]);export{E as __pageData,d as default};
