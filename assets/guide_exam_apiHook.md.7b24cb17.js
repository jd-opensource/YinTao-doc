import{_ as s,o as a,c as n,Q as p}from"./chunks/framework.f7ffead2.js";const u=JSON.parse('{"title":"接口数据测试","description":"","frontmatter":{},"headers":[],"relativePath":"guide/exam/apiHook.md","filePath":"guide/exam/apiHook.md","lastUpdated":1720595811000}'),l={name:"guide/exam/apiHook.md"},o=p(`<h1 id="接口数据测试" tabindex="-1">接口数据测试 <a class="header-anchor" href="#接口数据测试" aria-label="Permalink to &quot;接口数据测试&quot;">​</a></h1><p>YinTao 内置强大的接口模块，可以满足日常几乎所有的数据测试类型。</p><h2 id="接口数据监听和修改" tabindex="-1">接口数据监听和修改 <a class="header-anchor" href="#接口数据监听和修改" aria-label="Permalink to &quot;接口数据监听和修改&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"></span>
<span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> page.</span><span style="color:#B392F0;">to</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;http://t.268xue.com/&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> browser.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;request&#39;</span><span style="color:#E1E4E8;">,(</span><span style="color:#FFAB70;">res</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 监听页面请求</span></span>
<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;url&#39;</span><span style="color:#E1E4E8;">,res._initializer.url)</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 修改png接口数</span></span>
<span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> browser.</span><span style="color:#B392F0;">route</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;**/*.{png}&#39;</span><span style="color:#E1E4E8;">,(</span><span style="color:#FFAB70;">route</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;route&#39;</span><span style="color:#E1E4E8;">,route)</span></span>
<span class="line"><span style="color:#E1E4E8;">    route.</span><span style="color:#B392F0;">continue</span><span style="color:#E1E4E8;">({url:</span><span style="color:#9ECBFF;">&#39;http://storage.360buyimg.com/assert/icon.png&#39;</span><span style="color:#E1E4E8;">});</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> page.</span><span style="color:#B392F0;">to</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;http://t.268xue.com/&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">sleep</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">30000</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"></span>
<span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> page.</span><span style="color:#6F42C1;">to</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;http://t.268xue.com/&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> browser.</span><span style="color:#6F42C1;">on</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;request&#39;</span><span style="color:#24292E;">,(</span><span style="color:#E36209;">res</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 监听页面请求</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;url&#39;</span><span style="color:#24292E;">,res._initializer.url)</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 修改png接口数</span></span>
<span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> browser.</span><span style="color:#6F42C1;">route</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;**/*.{png}&#39;</span><span style="color:#24292E;">,(</span><span style="color:#E36209;">route</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;route&#39;</span><span style="color:#24292E;">,route)</span></span>
<span class="line"><span style="color:#24292E;">    route.</span><span style="color:#6F42C1;">continue</span><span style="color:#24292E;">({url:</span><span style="color:#032F62;">&#39;http://storage.360buyimg.com/assert/icon.png&#39;</span><span style="color:#24292E;">});</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> page.</span><span style="color:#6F42C1;">to</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;http://t.268xue.com/&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">sleep</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">30000</span><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="测试中访问第三方接口" tabindex="-1">测试中访问第三方接口 <a class="header-anchor" href="#测试中访问第三方接口" aria-label="Permalink to &quot;测试中访问第三方接口&quot;">​</a></h3><p>测试中可以很轻松的使用<a href="http://www.axios-js.com/zh-cn/docs/" target="_blank" rel="noreferrer">axios</a>完成相关接口操作</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"></span>
<span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> page.</span><span style="color:#B392F0;">to</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;http://t.268xue.com/&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">// 获取第三方接口数据</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">res</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> axios.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;http://YinTao.jd.com/ping&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;res&#39;</span><span style="color:#E1E4E8;">,res.data) </span><span style="color:#6A737D;">// 获取data数据</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">sleep</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">2000</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"></span>
<span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> page.</span><span style="color:#6F42C1;">to</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;http://t.268xue.com/&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6A737D;">// 获取第三方接口数据</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">res</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> axios.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;http://YinTao.jd.com/ping&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;res&#39;</span><span style="color:#24292E;">,res.data) </span><span style="color:#6A737D;">// 获取data数据</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">sleep</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2000</span><span style="color:#24292E;">)</span></span></code></pre></div>`,7),e=[o];function t(c,r,E,y,i,F){return a(),n("div",null,e)}const g=s(l,[["render",t]]);export{u as __pageData,g as default};
