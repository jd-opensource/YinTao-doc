import{_ as s,o as e,c as o,O as t}from"./chunks/framework.58a9e095.js";const k=JSON.parse('{"title":"keyboard","description":"","frontmatter":{},"headers":[],"relativePath":"guide/instructs/keyboard.md","filePath":"guide/instructs/keyboard.md","lastUpdated":1729501740000}'),l={name:"guide/instructs/keyboard.md"};function p(n,a,r,d,c,y){return e(),o("div",null,a[0]||(a[0]=[t('<h1 id="keyboard" tabindex="-1">keyboard <a class="header-anchor" href="#keyboard" aria-label="Permalink to &quot;keyboard&quot;">​</a></h1><p>使用键盘对页面进行操作</p><h2 id="keyboard-press-keycode" tabindex="-1">keyboard.press(<a href="/guide/data/keyCode.html">keyCode</a>) <a class="header-anchor" href="#keyboard-press-keycode" aria-label="Permalink to &quot;keyboard.press(&lt;a href=&quot;/guide/data/keyCode.html&quot;&gt;keyCode&lt;/a&gt;)&quot;">​</a></h2><p>模拟点击键盘。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> keyboard.</span><span style="color:#B392F0;">press</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;KeyA&#39;</span><span style="color:#E1E4E8;">)  </span><span style="color:#6A737D;">// 模拟点击键盘a键</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> keyboard.</span><span style="color:#6F42C1;">press</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;KeyA&#39;</span><span style="color:#24292E;">)  </span><span style="color:#6A737D;">// 模拟点击键盘a键</span></span></code></pre></div><h2 id="keyboard-down-keycode" tabindex="-1">keyboard.down(<a href="/guide/data/keyCode.html">keyCode</a>) <a class="header-anchor" href="#keyboard-down-keycode" aria-label="Permalink to &quot;keyboard.down(&lt;a href=&quot;/guide/data/keyCode.html&quot;&gt;keyCode&lt;/a&gt;)&quot;">​</a></h2><p>模拟按下键盘。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> keyboard.</span><span style="color:#B392F0;">down</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;ControlLeft&#39;</span><span style="color:#E1E4E8;">)  </span><span style="color:#6A737D;">// 模拟按下</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> keyboard.</span><span style="color:#6F42C1;">down</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;ControlLeft&#39;</span><span style="color:#24292E;">)  </span><span style="color:#6A737D;">// 模拟按下</span></span></code></pre></div><h2 id="keyboard-up-keycode" tabindex="-1">keyboard.up(<a href="/guide/data/keyCode.html">keyCode</a>) <a class="header-anchor" href="#keyboard-up-keycode" aria-label="Permalink to &quot;keyboard.up(&lt;a href=&quot;/guide/data/keyCode.html&quot;&gt;keyCode&lt;/a&gt;)&quot;">​</a></h2><p>模拟抬起键盘。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> keyboard.</span><span style="color:#B392F0;">up</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;ControlLeft&#39;</span><span style="color:#E1E4E8;">)  </span><span style="color:#6A737D;">// 模拟键盘抬起</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> keyboard.</span><span style="color:#6F42C1;">up</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;ControlLeft&#39;</span><span style="color:#24292E;">)  </span><span style="color:#6A737D;">// 模拟键盘抬起</span></span></code></pre></div><h2 id="keyboard-type-keycode" tabindex="-1">keyboard.type(<a href="/guide/data/keyCode.html">keyCode</a>) <a class="header-anchor" href="#keyboard-type-keycode" aria-label="Permalink to &quot;keyboard.type(&lt;a href=&quot;/guide/data/keyCode.html&quot;&gt;keyCode&lt;/a&gt;)&quot;">​</a></h2><p>模拟键盘输入。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> keyboard.</span><span style="color:#B392F0;">type</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;hello word&#39;</span><span style="color:#E1E4E8;">)  </span><span style="color:#6A737D;">// 模拟输入,等同于使用 await set()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> keyboard.</span><span style="color:#6F42C1;">type</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;hello word&#39;</span><span style="color:#24292E;">)  </span><span style="color:#6A737D;">// 模拟输入,等同于使用 await set()</span></span></code></pre></div>',14)]))}const h=s(l,[["render",p]]);export{k as __pageData,h as default};
