import{_ as t,o as a,c as n,O as o}from"./chunks/framework.58a9e095.js";const y=JSON.parse('{"title":"http接口服务","description":"","frontmatter":{},"headers":[],"relativePath":"guide/api/httpApi.md","filePath":"guide/api/httpApi.md","lastUpdated":1729501740000}'),p={name:"guide/api/httpApi.md"};function l(e,s,c,r,d,i){return a(),n("div",null,s[0]||(s[0]=[o(`<h1 id="http接口服务" tabindex="-1">http接口服务 <a class="header-anchor" href="#http接口服务" aria-label="Permalink to &quot;http接口服务&quot;">​</a></h1><h2 id="概要" tabindex="-1">概要 <a class="header-anchor" href="#概要" aria-label="Permalink to &quot;概要&quot;">​</a></h2><p><code>YinTao</code> 启动后默认占用本机<code>8777</code>端口,对外提供<code>http</code>服务。</p><h2 id="执行" tabindex="-1">执行 <a class="header-anchor" href="#执行" aria-label="Permalink to &quot;执行&quot;">​</a></h2><p>路径: <code>/run</code></p><p>请求方式: <code>POST</code></p><p>说明: <code>运行脚本时调用,运行报告随请求返回, 当填写remoteReport时，会立即返回空,执行结果会通过异步返回</code></p><p>参数:</p><table><thead><tr><th>名称</th><th>类型</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>script</td><td>string</td><td>空</td><td>执行的脚本</td></tr><tr><td>storage</td><td>any</td><td>空</td><td>自定义参数仓库</td></tr><tr><td>headless</td><td>boolean</td><td>fasle</td><td>无头模式，默认为显示界面运行，true开启无头运行</td></tr><tr><td>browser</td><td>string</td><td>&#39;chrome&#39;</td><td>执行使用的浏览器支持 <code>chrome</code>、<code>firefox</code>、<code>webkit</code></td></tr><tr><td>hosts</td><td>Map</td><td>空</td><td>host信息 <code>{&quot;域名&quot;:&quot;解析IP地址&quot;}</code></td></tr><tr><td>cookies</td><td><a href="https://dqa.jd.com/YinTao/guide/data/cookie.html" target="_blank" rel="noreferrer">Cookie</a>[]</td><td>空</td><td>可接收cookie数组,用于初始化配置</td></tr><tr><td>remoteReport</td><td>object</td><td>空</td><td>远程执行需要上报的地址</td></tr><tr><td>audio</td><td>Audio</td><td>空</td><td>当需要录制视频时传递,默认不开启视频录制</td></tr></tbody></table><p>remoteReport 类型:object:</p><table><thead><tr><th>名称</th><th>类型</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>result</td><td>string</td><td>空</td><td>远程上传结果地址</td></tr><tr><td>log</td><td>string</td><td>空</td><td>远程上传日志地址</td></tr><tr><td>image</td><td>string</td><td>空</td><td>远程上传图片地址</td></tr><tr><td>trace</td><td>string</td><td>空</td><td>远程上传追踪地址,支持本地路径以及http地址。<a href="https://dqa.jd.com/YinTao/guide/course/trace.html" target="_blank" rel="noreferrer">问题追踪</a></td></tr></tbody></table><p>Audio 类型:object:</p><table><thead><tr><th>名称</th><th>类型</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>url</td><td>string</td><td>空</td><td>视频存储地址，远程执行时只支持http远程上报地址</td></tr><tr><td>size</td><td>Object</td><td>空</td><td>调整录制时的分辨率</td></tr><tr><td>-width</td><td>Object</td><td>空</td><td>录制的宽度</td></tr><tr><td>-heightt</td><td>Object</td><td>空</td><td>录制的高度</td></tr></tbody></table><p>当开始录制时，不要关闭page,否则将丢失关闭页面的录制内容。</p><p>请求示例:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">  request</span></span>
<span class="line"><span style="color:#E1E4E8;">    .</span><span style="color:#B392F0;">post</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;http://localhost:8777/run&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;storage&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">123</span></span>
<span class="line"><span style="color:#E1E4E8;">        },</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;script&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">\`await page.to(&quot;https://www.baidu.com&quot;)\`</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;hosts&quot;</span><span style="color:#E1E4E8;">: {</span><span style="color:#9ECBFF;">&quot;nn2.com&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;11.91.160.125&quot;</span><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">      },</span></span>
<span class="line"><span style="color:#E1E4E8;">      {</span></span>
<span class="line"><span style="color:#E1E4E8;">        timeout: </span><span style="color:#79B8FF;">99999999</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">    )</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">  request</span></span>
<span class="line"><span style="color:#24292E;">    .</span><span style="color:#6F42C1;">post</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;http://localhost:8777/run&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;storage&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">123</span></span>
<span class="line"><span style="color:#24292E;">        },</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;script&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">\`await page.to(&quot;https://www.baidu.com&quot;)\`</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;hosts&quot;</span><span style="color:#24292E;">: {</span><span style="color:#032F62;">&quot;nn2.com&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;11.91.160.125&quot;</span><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">      },</span></span>
<span class="line"><span style="color:#24292E;">      {</span></span>
<span class="line"><span style="color:#24292E;">        timeout: </span><span style="color:#005CC5;">99999999</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    )</span></span></code></pre></div><p>响应结果</p><table><thead><tr><th>名称</th><th>类型</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>success</td><td>boolean</td><td>false</td><td>执行结果</td></tr><tr><td>duration</td><td>number</td><td>无</td><td>执行持续时间 单位/ms</td></tr><tr><td>start_time</td><td>boolean</td><td>false</td><td>开始执行的时间 单位/ms</td></tr><tr><td>msg</td><td>string</td><td>无</td><td>结果提示消息</td></tr><tr><td>divertor</td><td>Divertor</td><td>空</td><td>断言信息</td></tr><tr><td>log</td><td>string</td><td>空</td><td>日志信息</td></tr></tbody></table><p>Divertor</p><table><thead><tr><th>名称</th><th>类型</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>msg</td><td>string</td><td>空</td><td>错误描述</td></tr><tr><td>code</td><td>string</td><td>空</td><td>相关代码</td></tr><tr><td>success</td><td>boolean</td><td>false</td><td>是否成功</td></tr></tbody></table><p>响应示例:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#9ECBFF;">&quot;success&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#9ECBFF;">&quot;duration&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">3488</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#9ECBFF;">&quot;start_time&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1615550400079</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#9ECBFF;">&quot;msg&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;执行成功&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#9ECBFF;">&quot;divertor&quot;</span><span style="color:#E1E4E8;">: [],</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;log&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#032F62;">&quot;success&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#032F62;">&quot;duration&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">3488</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#032F62;">&quot;start_time&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1615550400079</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#032F62;">&quot;msg&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;执行成功&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#032F62;">&quot;divertor&quot;</span><span style="color:#24292E;">: [],</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;log&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="录制脚本" tabindex="-1">录制脚本 <a class="header-anchor" href="#录制脚本" aria-label="Permalink to &quot;录制脚本&quot;">​</a></h2><p>路径: <code>/live</code></p><p>请求方式: <code>POST</code></p><p>说明: <code>录制脚本时调用,脚本随请求响应返回</code></p><p>参数:</p><table><thead><tr><th>名称</th><th>类型</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>url</td><td>string</td><td>空</td><td>录制时默认打开的地址</td></tr><tr><td>compatibility</td><td>bool</td><td>空</td><td>兼容模式,默认采用YinTao浏览器,开启后将使用Chromium</td></tr><tr><td>storage</td><td>any</td><td>空</td><td>自定义参数仓库</td></tr><tr><td>cookies</td><td><a href="https://dqa.jd.com/YinTao/guide/data/cookie.html" target="_blank" rel="noreferrer">Cookie</a>[]</td><td>空</td><td>可接收cookie数组,用于初始化配置</td></tr><tr><td>device</td><td>string</td><td>空</td><td>模拟移动设备录制, 支持的字段参考<a href="https://github.com/microsoft/playwright/blob/main/packages/playwright-core/src/server/deviceDescriptorsSource.json" target="_blank" rel="noreferrer">setDevice</a></td></tr><tr><td>hosts</td><td>Map</td><td>空</td><td>host信息 <code>{&quot;域名&quot;:&quot;解析IP地址&quot;}</code></td></tr></tbody></table><p>请求示例:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">  request</span></span>
<span class="line"><span style="color:#E1E4E8;">    .</span><span style="color:#B392F0;">post</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;http://localhost:8777/live&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;url&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;https://baidu.com&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;storage&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">123</span></span>
<span class="line"><span style="color:#E1E4E8;">        },</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;hosts&quot;</span><span style="color:#E1E4E8;">: {</span><span style="color:#9ECBFF;">&quot;nn2.com&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;11.91.160.125&quot;</span><span style="color:#E1E4E8;">}  </span></span>
<span class="line"><span style="color:#E1E4E8;">      },</span></span>
<span class="line"><span style="color:#E1E4E8;">      {</span></span>
<span class="line"><span style="color:#E1E4E8;">        timeout: </span><span style="color:#79B8FF;">99999999</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">    )</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">  request</span></span>
<span class="line"><span style="color:#24292E;">    .</span><span style="color:#6F42C1;">post</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;http://localhost:8777/live&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;url&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;https://baidu.com&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;storage&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">123</span></span>
<span class="line"><span style="color:#24292E;">        },</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;hosts&quot;</span><span style="color:#24292E;">: {</span><span style="color:#032F62;">&quot;nn2.com&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;11.91.160.125&quot;</span><span style="color:#24292E;">}  </span></span>
<span class="line"><span style="color:#24292E;">      },</span></span>
<span class="line"><span style="color:#24292E;">      {</span></span>
<span class="line"><span style="color:#24292E;">        timeout: </span><span style="color:#005CC5;">99999999</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    )</span></span></code></pre></div><p>响应结果</p><table><thead><tr><th>名称</th><th>类型</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>script</td><td>string</td><td>无</td><td>录制生成的脚本</td></tr><tr><td>code</td><td>number</td><td>无</td><td>错误代码</td></tr><tr><td>msg</td><td>string</td><td>无</td><td>描述信息</td></tr></tbody></table><p>响应示例:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">  {</span></span>
<span class="line"><span style="color:#e1e4e8;">    &quot;script&quot;: &quot;await page.to(&#39;https://www.baidu.com&#39;)\\nawait getDom(&#39;#kw&#39;); await set(\\&quot;hello word\\&quot;);\\nawait getDom(&#39;#su&#39;); await click()\\n&quot;,</span></span>
<span class="line"><span style="color:#e1e4e8;">    &quot;code&quot;  : 2000</span></span>
<span class="line"><span style="color:#e1e4e8;">    &quot;msg&quot;   : &quot;success!&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">  }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">  {</span></span>
<span class="line"><span style="color:#24292e;">    &quot;script&quot;: &quot;await page.to(&#39;https://www.baidu.com&#39;)\\nawait getDom(&#39;#kw&#39;); await set(\\&quot;hello word\\&quot;);\\nawait getDom(&#39;#su&#39;); await click()\\n&quot;,</span></span>
<span class="line"><span style="color:#24292e;">    &quot;code&quot;  : 2000</span></span>
<span class="line"><span style="color:#24292e;">    &quot;msg&quot;   : &quot;success!&quot;</span></span>
<span class="line"><span style="color:#24292e;">  }</span></span></code></pre></div><h2 id="ping" tabindex="-1">ping <a class="header-anchor" href="#ping" aria-label="Permalink to &quot;ping&quot;">​</a></h2><p>路径: <code>/ping</code></p><p>请求方式: <code>GET</code></p><p>说明: <code>可用于检测driver是否运行</code></p><p>请求示例:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">  request.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;http://localhost:8777/ping&quot;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">  request.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;http://localhost:8777/ping&quot;</span><span style="color:#24292E;">)</span></span></code></pre></div><p>响应示例:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;ok&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;ok&quot;</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="退出" tabindex="-1">退出 <a class="header-anchor" href="#退出" aria-label="Permalink to &quot;退出&quot;">​</a></h2><p>路径: <code>/exit</code></p><p>请求方式: <code>GET</code></p><p>说明: <code>调用后关闭YinTao</code></p><p>请求示例:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">  request.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;http://localhost:8777/exit&quot;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">  request.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;http://localhost:8777/exit&quot;</span><span style="color:#24292E;">)</span></span></code></pre></div><p>响应示例:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;ok&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;ok&quot;</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div>`,50)]))}const u=t(p,[["render",l]]);export{y as __pageData,u as default};
