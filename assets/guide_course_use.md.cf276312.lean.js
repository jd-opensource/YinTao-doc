import{_ as a,o as n,c as o,O as t}from"./chunks/framework.58a9e095.js";const e="/assets/postman_live.ff389554.png",l="/assets/postman_run.d885d64e.png",y=JSON.parse('{"title":"使用说明","description":"","frontmatter":{},"headers":[],"relativePath":"guide/course/use.md","filePath":"guide/course/use.md","lastUpdated":1729501740000}'),p={name:"guide/course/use.md"};function c(r,s,i,u,d,E){return n(),o("div",null,s[0]||(s[0]=[t(`<h1 id="使用说明" tabindex="-1">使用说明 <a class="header-anchor" href="#使用说明" aria-label="Permalink to &quot;使用说明&quot;">​</a></h1><h2 id="postman" tabindex="-1">Postman <a class="header-anchor" href="#postman" aria-label="Permalink to &quot;Postman&quot;">​</a></h2><h3 id="录制脚本" tabindex="-1">录制脚本 <a class="header-anchor" href="#录制脚本" aria-label="Permalink to &quot;录制脚本&quot;">​</a></h3><ul><li>打开postman，创建post请求，地址栏输入：<code>http://localhost:8777/live</code></li><li>Body选择raw，格式选择JSON，内容输入如下</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;url&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;https://element.eleme.cn/#/zh-CN/component/cascader&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;storage&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">123</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;url&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;https://element.eleme.cn/#/zh-CN/component/cascader&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;storage&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">123</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><ul><li>postman完整录制请求截图如下</li></ul><p style="text-align:center;"><img src="`+e+'"></p> - 点击上图的Send按钮，打开chrome浏览器后，即可进行脚本的录制工作。 - 录制完成后，生成的脚步代码在Response的Body内，见上图。 ### 执行脚本 - 打开postman，创建post请求，地址栏输入：`http://localhost:8777/run` - Body选择raw，格式选择JSON，内容输入如下 ```js { &quot;script&quot;: &quot;await page.create(`http://www.baidu.com`)\\nawait page.change(0)\\nawait dom.click(`#kw`)\\nawait dom.set(`京东`,`#kw`)\\nawait keyboard.press(`Enter`)\\nawait dom.click(`(//*[string()=&#39;京东JD.COM官网 多快好省 只为品质生活&#39;])[1]`)\\nawait page.change(1)\\n&quot;, &quot;storage&quot;: &quot;123&quot;, } ``` - postman完整回放脚本截图如下 <p style="text-align:center;"><img src="'+l+'"></p> - 点击上图的Send按钮，自动打开浏览器回放脚本。 <p>使用过程中如果你有任何的意见或者问题，欢迎反馈。</p>',11)]))}const h=a(p,[["render",c]]);export{y as __pageData,h as default};
