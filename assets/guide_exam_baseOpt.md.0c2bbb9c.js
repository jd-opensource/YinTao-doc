import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.56e947f3.js";const d=JSON.parse('{"title":"常规操作流程示例","description":"","frontmatter":{},"headers":[],"relativePath":"guide/exam/baseOpt.md","filePath":"guide/exam/baseOpt.md","lastUpdated":1699515862000}'),p={name:"guide/exam/baseOpt.md"},o=l(`<h1 id="常规操作流程示例" tabindex="-1">常规操作流程示例 <a class="header-anchor" href="#常规操作流程示例" aria-label="Permalink to &quot;常规操作流程示例&quot;">​</a></h1><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">homePage</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;https://4399.com&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// 定义变量</span></span>
<span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> page.</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">(homePage) </span><span style="color:#6A737D;">// 使用变量打开页面</span></span>
<span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">sleep</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1000</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// 固定等待</span></span>
<span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> page.</span><span style="color:#B392F0;">to</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`https://baidu.com\`</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// 切换页面</span></span>
<span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> assert.</span><span style="color:#B392F0;">custom</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;#su&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;inputValue&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;百度一下&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// 页面元素断言</span></span>
<span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> assert.</span><span style="color:#B392F0;">location</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;https://www.baidu.com/&quot;</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// 页面地址断言</span></span>
<span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> assert.</span><span style="color:#B392F0;">title</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;百度一下，你就知道&quot;</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// 页面title 断言</span></span>
<span class="line"><span style="color:#6A737D;">// 执行hover</span></span>
<span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> dom.</span><span style="color:#B392F0;">hover</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`#s-top-left &gt; div &gt; a\`</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// hover 元素</span></span>
<span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> dom.</span><span style="color:#B392F0;">click</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`#kw\`</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// 元素点击</span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> dom.</span><span style="color:#B392F0;">exist</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`#kw\`</span><span style="color:#E1E4E8;">)){ </span><span style="color:#6A737D;">// 根据元素是否存在，接入逻辑分支</span></span>
<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;元素#kw存在&quot;</span><span style="color:#E1E4E8;">) </span></span>
<span class="line"><span style="color:#E1E4E8;">}</span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;元素不存在&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">throw</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Error</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;因为元素未找到,主动结束执行!&quot;</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// 主动抛出错误</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">roundNum</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Math.</span><span style="color:#B392F0;">round</span><span style="color:#E1E4E8;">(Math.</span><span style="color:#B392F0;">random</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">*</span><span style="color:#79B8FF;">1000</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// 随机获取1-1000 之间的数</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">name</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;名称&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">  roundNum </span><span style="color:#6A737D;">// 字符串组合</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> dom.</span><span style="color:#B392F0;">fill</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`#kw\`</span><span style="color:#E1E4E8;">,name) </span><span style="color:#6A737D;">// input 输入文本</span></span>
<span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">sleep</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">2000</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> dom.</span><span style="color:#B392F0;">click</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`#su\`</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> page.</span><span style="color:#B392F0;">screenshot</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;test-1.jpg&quot;</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// 屏幕截图</span></span>
<span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">sleep</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1000</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#6A737D;">// 测试上传</span></span>
<span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> page.</span><span style="color:#B392F0;">to</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`https://element.eleme.cn/#/zh-CN/component/upload\`</span><span style="color:#E1E4E8;">, {waitUntil:</span><span style="color:#9ECBFF;">&#39;commit&#39;</span><span style="color:#E1E4E8;">}) </span><span style="color:#6A737D;">// 页面跳转</span></span>
<span class="line"><span style="color:#6A737D;">// 截图上传</span></span>
<span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> dom.</span><span style="color:#B392F0;">upload</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`#app &gt; div.main-cnt &gt; div &gt; div.el-scrollbar__wrap &gt; div &gt; div &gt; div.page-component__content &gt; section &gt; div:nth-child(4) &gt; div.source &gt; div &gt; div &gt; div.el-upload.el-upload--text &gt; input\`</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">\`C:</span><span style="color:#79B8FF;">\\\\</span><span style="color:#9ECBFF;">Users</span><span style="color:#79B8FF;">\\\\</span><span style="color:#9ECBFF;">zhouyuan11</span><span style="color:#79B8FF;">\\\\</span><span style="color:#9ECBFF;">AppData</span><span style="color:#79B8FF;">\\\\</span><span style="color:#9ECBFF;">Local</span><span style="color:#79B8FF;">\\\\</span><span style="color:#9ECBFF;">Programs</span><span style="color:#79B8FF;">\\\\</span><span style="color:#9ECBFF;">cherry_driver</span><span style="color:#79B8FF;">\\\\</span><span style="color:#9ECBFF;">cherry_tray@2x.png\`</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">sleep</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1000</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">homePage</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;https://4399.com&quot;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// 定义变量</span></span>
<span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> page.</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">(homePage) </span><span style="color:#6A737D;">// 使用变量打开页面</span></span>
<span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">sleep</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1000</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// 固定等待</span></span>
<span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> page.</span><span style="color:#6F42C1;">to</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`https://baidu.com\`</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// 切换页面</span></span>
<span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> assert.</span><span style="color:#6F42C1;">custom</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;#su&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;inputValue&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;百度一下&quot;</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// 页面元素断言</span></span>
<span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> assert.</span><span style="color:#6F42C1;">location</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;https://www.baidu.com/&quot;</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// 页面地址断言</span></span>
<span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> assert.</span><span style="color:#6F42C1;">title</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;百度一下，你就知道&quot;</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// 页面title 断言</span></span>
<span class="line"><span style="color:#6A737D;">// 执行hover</span></span>
<span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> dom.</span><span style="color:#6F42C1;">hover</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`#s-top-left &gt; div &gt; a\`</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// hover 元素</span></span>
<span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> dom.</span><span style="color:#6F42C1;">click</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`#kw\`</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// 元素点击</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> dom.</span><span style="color:#6F42C1;">exist</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`#kw\`</span><span style="color:#24292E;">)){ </span><span style="color:#6A737D;">// 根据元素是否存在，接入逻辑分支</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;元素#kw存在&quot;</span><span style="color:#24292E;">) </span></span>
<span class="line"><span style="color:#24292E;">}</span><span style="color:#D73A49;">else</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;元素不存在&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Error</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;因为元素未找到,主动结束执行!&quot;</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// 主动抛出错误</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">roundNum</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Math.</span><span style="color:#6F42C1;">round</span><span style="color:#24292E;">(Math.</span><span style="color:#6F42C1;">random</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">*</span><span style="color:#005CC5;">1000</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// 随机获取1-1000 之间的数</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">name</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;名称&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;">  roundNum </span><span style="color:#6A737D;">// 字符串组合</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> dom.</span><span style="color:#6F42C1;">fill</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`#kw\`</span><span style="color:#24292E;">,name) </span><span style="color:#6A737D;">// input 输入文本</span></span>
<span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">sleep</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2000</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> dom.</span><span style="color:#6F42C1;">click</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`#su\`</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> page.</span><span style="color:#6F42C1;">screenshot</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;test-1.jpg&quot;</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// 屏幕截图</span></span>
<span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">sleep</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1000</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6A737D;">// 测试上传</span></span>
<span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> page.</span><span style="color:#6F42C1;">to</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`https://element.eleme.cn/#/zh-CN/component/upload\`</span><span style="color:#24292E;">, {waitUntil:</span><span style="color:#032F62;">&#39;commit&#39;</span><span style="color:#24292E;">}) </span><span style="color:#6A737D;">// 页面跳转</span></span>
<span class="line"><span style="color:#6A737D;">// 截图上传</span></span>
<span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> dom.</span><span style="color:#6F42C1;">upload</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`#app &gt; div.main-cnt &gt; div &gt; div.el-scrollbar__wrap &gt; div &gt; div &gt; div.page-component__content &gt; section &gt; div:nth-child(4) &gt; div.source &gt; div &gt; div &gt; div.el-upload.el-upload--text &gt; input\`</span><span style="color:#24292E;">,</span><span style="color:#032F62;">\`C:</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">Users</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">zhouyuan11</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">AppData</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">Local</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">Programs</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">cherry_driver</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">cherry_tray@2x.png\`</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">sleep</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1000</span><span style="color:#24292E;">)</span></span></code></pre></div>`,2),t=[o];function e(c,r,y,E,i,F){return a(),n("div",null,t)}const C=s(p,[["render",e]]);export{d as __pageData,C as default};
