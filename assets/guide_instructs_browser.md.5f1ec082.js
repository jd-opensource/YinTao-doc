import{_ as s,o as e,c as a,Q as n}from"./chunks/framework.eecc699f.js";const g=JSON.parse('{"title":"browser","description":"","frontmatter":{},"headers":[],"relativePath":"guide/instructs/browser.md","filePath":"guide/instructs/browser.md","lastUpdated":1711006846000}'),o={name:"guide/instructs/browser.md"},l=n(`<h1 id="browser" tabindex="-1">browser <a class="header-anchor" href="#browser" aria-label="Permalink to &quot;browser&quot;">​</a></h1><h2 id="browser-on-event-request-requestfaile-requestfinished-response-callback-function" tabindex="-1">browser.on(event:&#39;request&#39;| &#39;requestfaile&#39; | &#39;requestfinished&#39; | &#39;response&#39;,callback:Function) <a class="header-anchor" href="#browser-on-event-request-requestfaile-requestfinished-response-callback-function" aria-label="Permalink to &quot;browser.on(event:&#39;request&#39;| &#39;requestfaile&#39; | &#39;requestfinished&#39; | &#39;response&#39;,callback:Function)&quot;">​</a></h2><p>监听浏览器事件 <strong>注意:</strong>: 监听事件是异步的且持续的,你不能期待再事件中抛出错误并中断执行。如果你需要同步使用<a href="https://dqa.jd.com/YinTao/guide/api/instruct.html#page.waitForResponse" target="_blank" rel="noreferrer">page.waitForResponse</a></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> browser.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;request&#39;</span><span style="color:#E1E4E8;">,(</span><span style="color:#FFAB70;">res</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 监听页面请求</span></span>
<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;url&#39;</span><span style="color:#E1E4E8;">,res._initializer.url)</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> browser.</span><span style="color:#6F42C1;">on</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;request&#39;</span><span style="color:#24292E;">,(</span><span style="color:#E36209;">res</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 监听页面请求</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;url&#39;</span><span style="color:#24292E;">,res._initializer.url)</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h2 id="browser-route-url-string-regexp-handler-route-route-request-request-void-options-times-number" tabindex="-1">browser.route(url: string|RegExp,handler: ((route: Route, request: Request) =&gt; void), options?: {times?: number;}) <a class="header-anchor" href="#browser-route-url-string-regexp-handler-route-route-request-request-void-options-times-number" aria-label="Permalink to &quot;browser.route(url: string|RegExp,handler: ((route: Route, request: Request) =&gt; void), options?: {times?: number;})&quot;">​</a></h2><p>修改浏览器接口内容</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 修改页面的png图片为自定义图片</span></span>
<span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> browser.</span><span style="color:#B392F0;">route</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;**/*.{png}&#39;</span><span style="color:#E1E4E8;">,(</span><span style="color:#FFAB70;">route</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;route&#39;</span><span style="color:#E1E4E8;">,route)</span></span>
<span class="line"><span style="color:#E1E4E8;">    route.</span><span style="color:#B392F0;">continue</span><span style="color:#E1E4E8;">({url:</span><span style="color:#9ECBFF;">&#39;http://storage.360buyimg.com/assert/icon.png&#39;</span><span style="color:#E1E4E8;">});</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 修改页面的png图片为自定义图片</span></span>
<span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> browser.</span><span style="color:#6F42C1;">route</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;**/*.{png}&#39;</span><span style="color:#24292E;">,(</span><span style="color:#E36209;">route</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;route&#39;</span><span style="color:#24292E;">,route)</span></span>
<span class="line"><span style="color:#24292E;">    route.</span><span style="color:#6F42C1;">continue</span><span style="color:#24292E;">({url:</span><span style="color:#032F62;">&#39;http://storage.360buyimg.com/assert/icon.png&#39;</span><span style="color:#24292E;">});</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div>`,7),p=[l];function r(t,c,i,E,u,y){return e(),a("div",null,p)}const h=s(o,[["render",r]]);export{g as __pageData,h as default};
